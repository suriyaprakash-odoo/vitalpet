<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>

        <record id="wizard_cenit_import_io_api_1_0_install" model="ir.ui.view">
            <field name="name">## Introduction

The import.io API is a [REST](http://en.wikipedia.org/wiki/Representational_state_transfer)ful API. It is designed as much as possible to have resource-oriented URLs and to use HTTP status codes to indicate API status.

We use standard HTTP which can be understood by any HTTP client. Remember, you should never expose your secret API key in any public client-side code.

JSON is always returned from the API on success.

import.io uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing), and codes in the 5xx range indicate an error with our servers.

All API requests *should* be made over HTTPS to &#x60;https://api.import.io/&#x60;

(You can find our legacy docs [here](/legacy).)



## API Authentication

You authenticate to the import.io API by providing your API key as URL query string parameter &#x60;_apikey&#x60;. You can manage your API key from [your account](https://import.io/data/account/). settings</field>
            <field name="model">cenit.import_io_api_1_0.settings</field>
            <field name="inherit_id" ref="base.res_config_installer"/>
            <field name="arch" type="xml">
                <xpath expr="//form" position="attributes">
                    <attribute name="string">## Introduction

The import.io API is a [REST](http://en.wikipedia.org/wiki/Representational_state_transfer)ful API. It is designed as much as possible to have resource-oriented URLs and to use HTTP status codes to indicate API status.

We use standard HTTP which can be understood by any HTTP client. Remember, you should never expose your secret API key in any public client-side code.

JSON is always returned from the API on success.

import.io uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing), and codes in the 5xx range indicate an error with our servers.

All API requests *should* be made over HTTPS to &#x60;https://api.import.io/&#x60;

(You can find our legacy docs [here](/legacy).)



## API Authentication

You authenticate to the import.io API by providing your API key as URL query string parameter &#x60;_apikey&#x60;. You can manage your API key from [your account](https://import.io/data/account/). settings</attribute>
                </xpath>
                <xpath expr="//footer" position="replace">
                    <footer>
                        <button string="Apply" type="object" name="execute"
                                class="oe_highlight" context="{'install': True}"/>
                    </footer>
                </xpath>
                <xpath expr="//separator" string="title" position="replace">
                    <p class="oe_grey">
                        Configure ## Introduction

The import.io API is a [REST](http://en.wikipedia.org/wiki/Representational_state_transfer)ful API. It is designed as much as possible to have resource-oriented URLs and to use HTTP status codes to indicate API status.

We use standard HTTP which can be understood by any HTTP client. Remember, you should never expose your secret API key in any public client-side code.

JSON is always returned from the API on success.

import.io uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing), and codes in the 5xx range indicate an error with our servers.

All API requests *should* be made over HTTPS to &#x60;https://api.import.io/&#x60;

(You can find our legacy docs [here](/legacy).)



## API Authentication

You authenticate to the import.io API by providing your API key as URL query string parameter &#x60;_apikey&#x60;. You can manage your API key from [your account](https://import.io/data/account/). data
                    </p>
                    <group>
                        <field name='api_key' placeholder='Your API Key'/>
                    </group>
                </xpath>
            </field>
        </record>

        <record id="action_wizard_cenit_import_io_api_1_0_install" model="ir.actions.act_window">
            <field name="name">Configure ## Introduction

The import.io API is a [REST](http://en.wikipedia.org/wiki/Representational_state_transfer)ful API. It is designed as much as possible to have resource-oriented URLs and to use HTTP status codes to indicate API status.

We use standard HTTP which can be understood by any HTTP client. Remember, you should never expose your secret API key in any public client-side code.

JSON is always returned from the API on success.

import.io uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing), and codes in the 5xx range indicate an error with our servers.

All API requests *should* be made over HTTPS to &#x60;https://api.import.io/&#x60;

(You can find our legacy docs [here](/legacy).)



## API Authentication

You authenticate to the import.io API by providing your API key as URL query string parameter &#x60;_apikey&#x60;. You can manage your API key from [your account](https://import.io/data/account/). data</field>
            <field name="type">ir.actions.act_window</field>
            <field name="res_model">cenit.import_io_api_1_0.settings</field>
            <field name="view_id" ref="wizard_cenit_import_io_api_1_0_install"/>
            <field name="view_type">form</field>
            <field name="view_mode">form</field>
            <field name="target">new</field>
        </record>

        <record id="todo_wizard_cenit_import_io_api_1_0_install" model="ir.actions.todo">
            <field name="action_id" ref="action_wizard_cenit_import_io_api_1_0_install"/>
            <field name="sequence">1</field>
            <field name="type">automatic</field>
        </record>

    </data>
</openerp>
